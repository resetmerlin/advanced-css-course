.card{


    //Functionality
    perspective: 150rem;
    // But basically, the lower the value, the more dramatic the perspective is.
    -moz-perspective: 150rem;
    // to work monaliza firefox...
    position: relative;
    height: 52rem;


    &__side{
        height: 52rem;
        transition: all 1s ease ;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        overflow:hidden ;
        //if child overflowing parent, it will make it hidden
        backface-visibility: hidden;
//         Well, what this does is that, if we set it to hidden,

// it basically hides the back part of an element.

        border-radius: 3px;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);

        &__front{
            background-color: gray;
         

        }

        &--back{
            background-color: green;
            transform: rotateY(180deg);
            &-1{
                background-image: linear-gradient(to right bottom, 
                $color-secondary-light, $color-secondary-dark);
            }
   


        }
    }

    &:hover &__side--front{
        transform: rotateY(-180deg);
    } 

    &:hover &__side--back{
        transform: rotateY(0);
    } 


    // we hoverd a card. and if i hovered, card__side will be transformed

    //Front side styling
    &__picture{
        background-size: cover;
        height: 23rem;
        background-blend-mode: screen;
        //it combines the gradient color u defined and background image.. 
        // clip-path: polygon(0 0, 100% 0 , 100% 80%, 0 100%);
        // prefix
        -webkit-clip-path:  polygon(0 0, 100% 0 , 100% 80%, 0 100%);
        
        &--1{
            background-image: linear-gradient(to right bottom, 
            $color-secondary-light, $color-secondary-dark),
            url(/img/nat-5.jpg);
        }
        &--2{
            background-image: url(/img/nat-5.jpg);
        }
        &--3{
            background-image: url(/img/nat-5.jpg);
        }
    }

    &__heading{
        font-size:2.8rem;
        font-weight: 300;
        text-transform: uppercase;
        position: absolute;
        top: 12rem;
        right: 2rem;
        color: $color-white;
        text-align: right;
        width: 75%;
  

        
          
    }

    &__heading-span{
        padding: 1rem 1.5rem;
        // padding make a text 2lines or more
        // box-decoration-break: clone;
        -webkit-box-decoration-break: clone;
        
        // So what clone does is to simply apply all the declarations

        // that we have in the selector which in this case
        
        // is only the padding to all of the boxes
        
        // that I created by an element.
        
        // Just like in this case.
        
        // So one element, two boxes, both styled.

        //it is not a element a heading... 
        &--1{
            background-image: linear-gradient(to right bottom, 
            rgba($color-secondary-light,.85), rgba($color-secondary-dark, .85));
        }
    }

    &__details{
        padding: 3rem;
        ul{
            list-style: none;
            width: 80%;
            // position: absolute;
            // left: 10%;

            margin: 0 auto;
            // simple way rather than using position

            li{
                text-align: center;
                font-size: 1.5rem;
                padding: 1rem;

                &:not(:last-child){
                    border-bottom: 1px solid $color-grey-light-2;
                }
            }
        }
    }
}